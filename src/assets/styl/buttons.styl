//
// Buttons
// --------------------------------------------------

// Base styles
// --------------------------------------------------

.btn {
  display inline-block
  margin-bottom 0 // For input.btn
  font-weight $btn-font-weight
  text-align center
  vertical-align middle
  touch-action manipulation
  cursor pointer
  background-image none // Reset unusual Firefox-on-Android default style see https://github.com/necolas/normalize.css/issues/214
  border 1px solid transparent
  white-space nowrap
  button-size($padding-base-vertical, $padding-base-horizontal, $font-size-base, $line-height-base, $btn-border-radius-base)
  user-select none

  &,
  &:active,
  &.active {
    &:focus,
    &.focus {
      tab-focus()
    }
  }

  &:hover,
  &:focus,
  &.focus {
    color $btn-default-color
    text-decoration none
  }

  &:active,
  &.active {
    outline 0
    background-image none
    box-shadow inset 0 3px 5px rgba(0, 0, 0, .125)
  }

  &.disabled,
  &[disabled],
  fieldset[disabled] & {
    cursor $cursor-disabled
    opacity-ie(.65)
    box-shadow none
  }

  a& {
    &.disabled,
    fieldset[disabled] & {
      pointer-events none
    }
  }
  // Future-proof disabling of clicks on `<a>` elements

  > i {
    &.pull-left,
    &.pull-right {
      line-height: $line-height-base;
    }
  }


}

// Alternate buttons
// --------------------------------------------------

.btn-default
  button-variant($btn-default-color, $btn-default-bg, $btn-default-border)
  background-color: #fff
  border-bottom-color: darken($btn-default-border, 2)
  -box-shadow(0 1px 1px rgba(90, 90, 90, 0.1))
  &.btn-bg {
    border-color: rgba(0, 0, 0, 0.1);
    background-clip: padding-box;
  }

.btn-primary
  button-variant($btn-primary-color, $btn-primary-bg, $btn-primary-border)

// Success appears as green
.btn-success
  button-variant($btn-success-color, $btn-success-bg, $btn-success-border)

// Info appears as blue-green
.btn-info
  button-variant($btn-info-color, $btn-info-bg, $btn-info-border)

// Warning appears as orange
.btn-warning
  button-variant($btn-warning-color, $btn-warning-bg, $btn-warning-border)

// Danger and error appear as red
.btn-danger
  button-variant($btn-danger-color, $btn-danger-bg, $btn-danger-border)

.btn-dark
  button-variant(#fff, $dark, $dark)

.btn-black
  button-variant(#fff, $black, $black)

// Button Icon
.btn-icon {
  padding: 0 !important;
  text-align: center;
  width: 34px;
  height: 34px;
  i {
    top: -1px;
    position: relative;
    line-height: 34px;
  }
  &.btn-sm {
    width: 30px;
    height: 30px;
    i {
      line-height: 30px;
    }
  }
  &.btn-lg {
    width: 45px;
    height: 45px;
    i {
      line-height: 45px;
    }
  }
}

// Button Rounded
.btn-rounded {
  border-radius: 50px;
  padding-left: 15px;
  padding-right: 15px;
  &.btn-lg {
    padding-left: 25px;
    padding-right: 25px;
  }
}

// Link buttons
// -------------------------

// Make a button look and behave like a link
.btn-link
  color $link-color
  font-weight normal
  border-radius 0

  &,
  &:active,
  &.active,
  &[disabled],
  fieldset[disabled] &
    background-color transparent
    box-shadow none
    webkit-box-shadow: none

  &,
  &:hover,
  &:focus,
  &:active
    border-color transparent

  &:hover,
  &:focus
    color $link-hover-color
    text-decoration $link-hover-decoration
    background-color transparent

  &[disabled],
  fieldset[disabled] &
    &:hover,
    &:focus
      color $btn-link-disabled-color
      text-decoration none

// Button Sizes
// --------------------------------------------------

.btn-lg
  // line-height ensure even-numbered height of button next to large input
  button-size($padding-large-vertical, $padding-large-horizontal, $font-size-lg, $line-height-large, $btn-border-radius-large)

.btn-sm
  // line-height ensure proper height of button next to small input
  button-size($padding-small-vertical, $padding-small-horizontal, $font-size-xs, $line-height-small, $btn-border-radius-small)

.btn-xs
  button-size($padding-xs-vertical, $padding-xs-horizontal, $font-size-xs, $line-height-small, $btn-border-radius-small)

// Block button
// --------------------------------------------------

.btn-block
  display block
  width 100%
  padding-left: 12px
  padding-right: 12px

// Vertically space out multiple block buttons
.btn-block + .btn-block
  margin-top 5px

// Specificity overrides
input[type="submit"],
input[type="reset"],
input[type="button"]
  &.btn-block
    width 100%

.btn-group-vertical > .btn:first-child:not(:last-child) {
  border-top-right-radius: $border-radius-base;
}

.btn-group-vertical > .btn:last-child:not(:first-child) {
  border-bottom-left-radius: $border-radius-base;
}

.btn-addon {
  i {
    margin: -7px -12px;
    margin-right: 12px;
    background-color: rgba(0, 0, 0, 0.1);
    width: 34px;
    height: 34px;
    line-height: 34px;
    text-align: center;
    float: left;
    position: relative;
    border-radius: $btn-border-radius 0 0 $btn-border-radius;
    &.pull-right {
      margin-right: -12px;
      margin-left: 12px;
      border-radius: 0 $btn-border-radius $btn-border-radius 0;
    }
  }
  &.btn-sm {
    i {
      margin: -6px -10px;
      margin-right: 10px;
      width: 30px;
      height: 30px;
      line-height: 30px;
      &.pull-right {
        margin-right: -10px;
        margin-left: 10px;
      }
    }
  }
  &.btn-lg {
    i {
      margin: -11px -16px;
      margin-right: 16px;
      width: 45px;
      height: 45px;
      line-height: 45px;
      &.pull-right {
        margin-right: -16px;
        margin-left: 16px;
      }
    }
  }
  &.btn-default {
    i {
      background-color: transparent;
      border-right: 1px solid $border-color;
    }
  }
}

// Switch
.i-switch {
  cursor: pointer;
  position: relative;
  display: inline-block;
  width: $switch-width;
  height: $switch-height;
  border-radius: 30px;
  background-color: $positive;
  margin: 0;
  input {
    position: absolute;
    opacity: 0;
    &:checked {
      + i {
        &:before {
          top: 50%;
          bottom: 50%;
          left: 50%;
          right: 5px;
          border-width: 0;
          border-radius: 5px;
        }
        &:after {
          margin-left: $switch-width - $switch-height + 1;
        }
      }
    }
  }
  i {
    &:before {
      content: "";
      position: absolute;
      top: -1px;
      bottom: -1px;
      left: -1px;
      right: -1px;
      background-color: #fff;
      border: 1px solid #f0f0f0;
      border-radius: 30px;
      -transition(all 0.2s);
    }
    &:after {
      content: "";
      position: absolute;
      background-color: #fff;
      width: $switch-height - 2;
      top: 1px;
      bottom: 1px;
      border-radius: 50%;
      -box-shadow(1px 1px 3px rgba(0, 0, 0, 0.25));
      -transition(margin-left 0.3s);
    }
  }
}

.i-switch-md {
  width: $switch-md-width;
  height: $switch-md-height;
  input {
    &:checked {
      + i {
        &:after {
          margin-left: $switch-md-width - $switch-md-height + 1;
        }
      }
    }
  }
  i {
    &:after {
      width: $switch-md-height - 2;
    }
  }
}

.i-switch-lg {
  width: $switch-lg-width;
  height: $switch-lg-height;
  input {
    &:checked {
      + i {
        &:after {
          margin-left: $switch-lg-width - $switch-lg-height + 1;
        }
      }
    }
  }
  i {
    &:after {
      width: $switch-lg-height - 2;
    }
  }
}

.i-checks {
  padding-left: 20px;
  cursor: pointer;
  input {
    opacity: 0;
    position: absolute;
    margin-left: -20px;
    &:checked + i {
      border-color: $info;
      &:before {
        left: 4px;
        top: 4px;
        width: 10px;
        height: 10px;
        background-color: $info;
      }
    }
    &:checked + span .active {
      display: inherit;
    }
    &[type="radio"] + i {
      &,
      &:before {
        border-radius: 50%;
      }
    }
    &[type="checkbox"]:checked + i:before {

    }
    &[type="radio"]:checked + i:before {

    }
    &[disabled],
    fieldset[disabled] & {
      & + i {
        border-color: lighten($input-border, 5);
        &:before {
          background-color: lighten($input-border, 5);
        }
      }
    }
  }
  > i {
    width: 20px;
    height: 20px;
    line-height: 1;
    border: 1px solid $input-border;
    background-color: #fff;
    margin-left: -20px;
    margin-top: -2px;
    display: inline-block;
    vertical-align: middle;
    margin-right: 4px;
    position: relative;
    &:before {
      content: "";
      position: absolute;
      left: 50%;
      top: 50%;
      width: 0px;
      height: 0px;
      background-color: transparent;
      -transition(all 0.2s);
    }
  }
  > span {
    margin-left: -20px;
    .active {
      display: none;
    }
  }
}

.i-checks-sm {
  input {
    &:checked + i {
      &:before {
        left: 3px;
        top: 3px;
        width: 8px;
        height: 8px;
      }
    }
  }
  > i {
    width: 16px;
    height: 16px;
    margin-left: -18px;
    margin-right: 6px;
  }
}

.i-checks-lg {
  input {
    &:checked + i {
      &:before {
        left: 8px;
        top: 8px;
        width: 12px;
        height: 12px;
      }
    }
  }
  > i {
    width: 30px;
    height: 30px;
  }
}

// ui.bootstrap datepicker: todo: use it?
.datepicker {
  margin: 0 5px
}

.datepicker .btn-default {
  border-width: 0;
  box-shadow: none;
}

.datepicker .btn[disabled] {
  opacity: 0.4
}

.datepicker .btn-info .text-info {
  color: #fff !important;
}
